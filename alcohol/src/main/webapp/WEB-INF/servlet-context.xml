<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd">

    <!-- Spring schedule 설정들을 Annotation 기반 처리 -->
    <task:scheduler id="jobScheduler" pool-size="10"/>
    <task:annotation-driven scheduler="jobScheduler" />

    <!-- Spring MVC 설정들을 애너테이션(annotation) 기반으로 처리 -->
    <mvc:annotation-driven />

    <!-- Spring MVC에서 dispatcherServlet이 처리하지 않는 정적 요청에 필요한 파일들(image, css, 
        javascript, ...)의 폴더 위치 요청 주소가 server:port/contextRoot/static/.. 으로 시작하는 
        요청들에 대해서는 dispatcherServlet이 컨트롤러 메서드를 호출하지 않고 해당 폴더 아래에 있는 파일들을 클라이언트로 바로 
        전송. -->
    <!-- static 폴더 밑에 하위폴더의 하위폴더들 -->

    <mvc:resources location="/static" mapping="/**" />

    <!-- View Resolver: Spring MVC에서 사용하는 뷰(JSP, ...)를 찾기 위한 설정 -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <websocket:handlers>
        <websocket:mapping handler="SocketHandler"
            path="/chat" />
        <!-- WebSocket Handshake : 웹소켓 핸들러 클래스(echoHandler)가 호출되기전에 HttpSession에 
            접속하여 -->
        <!-- '이용자 아이디를 추출하는 기능' 등을 인터셉터가 수행하도록 설정 -->
        <websocket:handshake-interceptors>
            <bean
                class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
        </websocket:handshake-interceptors>
        <!-- <websocket:sockjs /> -->
    </websocket:handlers>
    <bean id="SocketHandler"
        class="com.mid.alcohol.socket.SocketHandler" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"> </bean>
	


	<!-- 특정 패키지 아래에 선언된 컴포넌트 애너테이션(@Controller, @RestController)이 선언된 클래스들을 
		bean으로 관리: 컨트롤러 클래스들을 작성하는 패키지 이름. -->
	<context:component-scan	base-package="com.mid.alcohol.web" />
	


</beans>